// (file autogenerated) see previous message for explanation
const ASSETS=["crypto_spot","crypto_futures","forex","options"];const MODES=["paper","live"];
const $=s=>document.querySelector(s);const $$=s=>Array.from(document.querySelectorAll(s));
async function jget(u){const r=await fetch(u);if(!r.ok)throw new Error(await r.text());return r.json();}
async function jpost(u,b){const r=await fetch(u,{method:"POST",headers:{'Content-Type':'application/json'},body:JSON.stringify(b||{})});if(!r.ok)throw new Error(await r.text());return r.json();}
async function refreshHeader(){let l=0,p=0,lp=0,pp=0;for(const a of ASSETS){try{const st=await jget(`/asset/${a}/status`);l+=st?.live?.total||0;p+=st?.paper?.total||0;lp+=st?.live?.unrealized_pnl||0;pp+=st?.paper?.unrealized_pnl||0;}catch(e){}}const fmt=n=>`$${(+n).toFixed(2)}`;const sign=n=>`${n>=0?'+':''}${fmt(n)}`;const LW=document.getElementById('liveWallet');if(LW)LW.textContent=fmt(l);const PW=document.getElementById('paperWallet');if(PW)PW.textContent=fmt(p);const LP=document.getElementById('livePnl');if(LP)LP.textContent=sign(lp);const PP=document.getElementById('paperPnl');if(PP)PP.textContent=sign(pp);}
async function refreshAssetCard(a){const st=await jget(`/asset/${a}/status`);for(const m of MODES){const pre=`#${a}_${m}`;const set=st?.[m]||{};const put=(id,val)=>{const el=document.querySelector(id);if(el)el.textContent=val;};const fmt=n=>`$${(+n||0).toFixed(2)}`;put(`${pre}_total`,fmt(set.total));put(`${pre}_available`,fmt(set.available));put(`${pre}_used`,fmt(set.used));put(`${pre}_reward`,(set.unrealized_pnl||0).toFixed(2));}
const pos=await jget(`/asset/${a}/positions`);for(const m of MODES){const tbody=document.querySelector(`#${a}_${m}_positions tbody`);if(!tbody)continue;tbody.innerHTML='';(pos?.[m]||[]).forEach(p=>{const tr=document.createElement('tr');tr.innerHTML=`<td>${new Date(p.open_time).toLocaleString()}</td><td>${p.symbol}</td><td>${p.side}</td><td>${p.amount}</td><td>$${(+p.value_usd||0).toFixed(2)}</td><td class="${(p.pnl||0)>=0?'text-green':'text-red'}">$${(+p.pnl||0).toFixed(2)}</td>`;tbody.appendChild(tr);});}}
const charts={};async function upsertChart(a,m){const key=`${a}_${m}`;const canvas=document.getElementById(`${key}_equity`);if(!canvas||typeof Chart==='undefined')return;const data=await jget(`/analytics/${a}/${m}/equity-curve?window=7d`);const labels=(data.series||[]).map(p=>new Date(p.ts));const values=(data.series||[]).map(p=>p.equity);if(!charts[key]){charts[key]=new Chart(canvas,{type:'line',data:{labels,datasets:[{label:key,data:values,tension:0.25}]},options:{responsive:true,maintainAspectRatio:false,plugins:{legend:{display:false}},scales:{x:{type:'time'}}}});}else{charts[key].data.labels=labels;charts[key].data.datasets[0].data=values;charts[key].update();}}
function bindToggles(){$$(".js-paper-toggle").forEach(b=>b.addEventListener('click',async e=>{const a=e.currentTarget.dataset.asset;const on=!e.currentTarget.classList.contains('is-on');try{await jpost(`/paper/${a}/${on?'enable':'disable'}`);e.currentTarget.classList.toggle('is-on',on);}catch(err){alert(err);}}));$$(".js-live-toggle").forEach(b=>b.addEventListener('click',async e=>{const a=e.currentTarget.dataset.asset;const on=!e.currentTarget.classList.contains('is-on');try{if(on){const t=prompt("Type LIVE to confirm live trading:");if(t!=="LIVE")return;await jpost(`/live/${a}/enable`,{confirm:"LIVE"});}else{await jpost(`/live/${a}/disable`);}e.currentTarget.classList.toggle('is-on',on);}catch(err){alert(err);}}));const es=document.getElementById('btnEmergencyStop');if(es){es.addEventListener('click',async()=>{try{await jpost('/emergency-stop');}catch(e){alert(e);}});}}
let historyCache=[];function renderHistory(rows){const tbody=document.querySelector('#historyTable tbody');if(!tbody)return;tbody.innerHTML='';rows.forEach(t=>{const tr=document.createElement('tr');tr.innerHTML=`<td>${new Date(t.ts_open).toLocaleString()}</td><td>${t.mode}</td><td>${t.symbol}</td><td>${t.side}</td><td>${t.amount}</td><td>$${(+t.avg_price||0).toFixed(4)}</td><td>$${(+t.pnl||0).toFixed(2)}</td><td>$${(+t.fees||0).toFixed(2)}</td>`;tbody.appendChild(tr);});}
async function refreshHistory(a,m){historyCache=await jget(`/history/${a}${m?`?mode=${m}`:''}`);renderHistory(historyCache);}function bindHistoryFilters(){const a=document.getElementById('histAsset');const m=document.getElementById('histMode');const s=document.getElementById('histSearch');if(a)a.addEventListener('change',()=>refreshHistory(a.value,m?.value||undefined));if(m)m.addEventListener('change',()=>refreshHistory(a?.value||'crypto_spot',m.value||undefined));if(s)s.addEventListener('input',()=>{const q=s.value.toLowerCase();renderHistory(historyCache.filter(r=>(r.symbol||'').toLowerCase().includes(q)));});}
async function refreshStrategies(asset){const list=await jget(`/strategies/${asset}`);const ul=document.getElementById('strategyList');if(!ul)return;ul.innerHTML='';(list||[]).forEach(s=>{const li=document.createElement('li');const params=Object.entries(s.params||{}).map(([k,v])=>`${k}: ${v}`).join(', ');li.innerHTML=`<div class="row"><div class="col"><strong>${s.name||s.id}</strong> <small>(${s.status||'idle'})</small></div><div class="col-auto"><button class="btn btn-sm js-str-start" data-asset="${asset}" data-sid="${s.id}">Start</button><button class="btn btn-sm js-str-stop" data-asset="${asset}" data-sid="${s.id}">Stop</button></div></div><div class="muted">Params: ${params||'-'}</div><div class="muted">Sharpe: ${s.performance?.sharpe ?? '-'} | Win%: ${((s.performance?.win_rate||0)*100).toFixed(1)} | Avg: ${s.performance?.avg_trade ?? '-'}</div>`;ul.appendChild(li);});$$(".js-str-start").forEach(b=>b.onclick=async e=>{const a=e.currentTarget.dataset.asset,sid=e.currentTarget.dataset.sid;await jpost(`/strategy/${a}/${sid}/start`);refreshStrategies(a);});$$(".js-str-stop").forEach(b=>b.onclick=async e=>{const a=e.currentTarget.dataset.asset,sid=e.currentTarget.dataset.sid;await jpost(`/strategy/${a}/${sid}/stop`);refreshStrategies(a);});}
async function boot(){bindToggles();bindHistoryFilters();refreshHeader();for(const a of ASSETS){refreshAssetCard(a);for(const m of MODES)upsertChart(a,m);}const HA=document.getElementById('histAsset');if(HA)refreshHistory(HA.value||'crypto_spot');const SA=document.getElementById('strategyAsset');if(SA)refreshStrategies(SA.value||'crypto_spot');setInterval(refreshHeader,15000);setInterval(()=>ASSETS.forEach(a=>refreshAssetCard(a)),20000);setInterval(()=>ASSETS.forEach(a=>MODES.forEach(m=>upsertChart(a,m))),30000);}document.addEventListener('DOMContentLoaded',boot);