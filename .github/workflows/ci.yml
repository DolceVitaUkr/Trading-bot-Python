name: Trading Bot CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with ruff
      run: |
        ruff check .
    
    - name: Format check with black
      run: |
        black --check --diff .
      continue-on-error: true  # Allow formatting failures for now
    
    - name: Type check with mypy
      run: |
        mypy . --exclude venv --ignore-missing-imports --no-strict-optional
      continue-on-error: true  # Allow type check failures for now
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --tb=short
    
    - name: Run architectural analysis
      run: |
        echo "Running architectural analysis..."
        python tools/Build_Dependency_Graph.py
        python tools/Find_Hardcoded_Paths.py  
        python tools/Check_Interface_Conformance.py
        python tools/Check_Schemas.py
    
    - name: Upload analysis artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: analysis-reports-${{ matrix.python-version }}
        path: artifacts/
        retention-days: 7
    
    - name: Audit dependencies with pip-audit
      run: |
        pip-audit --desc
      continue-on-error: true  # Allow security issues for now
