*** Begin Patch
*** Add File: tradingbot/core/contract_catalog.py
+import json, time
+from pathlib import Path
+from typing import Dict, Any, Optional, List
+from .loggerconfig import get_logger
+log = get_logger(__name__)
+DEFAULT_CATALOG = {"schema_version": 1, "generated_at": None, "contracts": []}
+class ContractCatalog:
+    def __init__(self, path: Path):
+        self.path = Path(path)
+        self.data = DEFAULT_CATALOG.copy()
+    def load(self) -> None:
+        if self.path.exists():
+            self.data = json.loads(self.path.read_text(encoding="utf-8"))
+        else:
+            self.data = DEFAULT_CATALOG.copy()
+            self.data["generated_at"] = time.strftime("%Y-%m-%dT%H:%M:%S")
+            self.save()
+    def save(self) -> None:
+        self.path.parent.mkdir(parents=True, exist_ok=True)
+        self.path.write_text(json.dumps(self.data, indent=2), encoding="utf-8")
+    def refresh(self, contracts: Optional[List[Dict[str, Any]]] = None) -> None:
+        if contracts is not None:
+            self.data["contracts"] = contracts
+        self.data["generated_at"] = time.strftime("%Y-%m-%dT%H:%M:%S")
+        self.save()
+    def find(self, contract_id: str) -> Optional[Dict[str, Any]]:
+        for c in self.data.get("contracts", []):
+            if c.get("id") == contract_id:
+                return c
+        return None
+    def metadata_for_symbol(self, symbol: str) -> Optional[Dict[str, Any]]:
+        return self.find(symbol)
+
*** End Patch
*** Begin Patch
*** Add File: tradingbot/core/market_calendars.py
+import datetime as dt
+from .loggerconfig import get_logger
+log = get_logger(__name__)
+_CAL = {
+    "CME-ES": (dt.time(23, 0), dt.time(22, 0)),
+    "IBKR-FX-OPT": (dt.time(13, 0), dt.time(21, 0)),
+    "BYBIT-PERP": (dt.time(0, 0), dt.time(23, 59)),
+}
+def is_session_open(calendar_key: str, now_utc: dt.datetime | None = None) -> bool:
+    now_utc = now_utc or dt.datetime.utcnow().replace(tzinfo=dt.timezone.utc)
+    start, end = _CAL.get(calendar_key, (dt.time(0,0), dt.time(23,59)))
+    t = now_utc.time()
+    if start <= end:
+        return start <= t <= end
+    return t >= start or t <= end
+
*** End Patch
*** Begin Patch
*** Update File: tradingbot/core/exchange_conformance.py
@@
-from .loggerconfig import get_logger
+from .loggerconfig import get_logger
+from .contract_catalog import ContractCatalog
@@
+_catalog_instance = None
+def set_catalog_instance(c):
+    global _catalog_instance
+    _catalog_instance = c
@@
-def clamp_order_if_needed(oc):
-    extra = oc.extra or {}
+def clamp_order_if_needed(oc):
+    meta = None
+    if _catalog_instance and oc.extra and 'contract_id' in oc.extra:
+        meta = _catalog_instance.find(oc.extra['contract_id'])
+    extra = dict(oc.extra or {})
+    if meta:
+        extra.setdefault('tick_size', meta.get('tick_size'))
+        extra.setdefault('step_size', meta.get('lot_size'))
+        extra.setdefault('min_notional', meta.get('min_notional'))
+        oc = replace(oc, extra=extra)
*** End Patch
